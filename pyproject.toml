[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "archaeovault"
version = "0.1.0"
description = "An agentic AI-powered archaeological research platform"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "Vishal Mishra", email = "vishal@example.com"},
]
keywords = ["archaeology", "ai", "streamlit", "anthropic", "agents"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "streamlit>=1.28.0,<2.0.0",
    "anthropic>=0.7.0,<1.0.0",
    "pydantic>=2.5.0,<3.0.0",
    "pydantic-settings>=2.1.0,<3.0.0",
    "sqlalchemy>=2.0.0,<3.0.0",
    "redis>=5.0.0,<6.0.0",
    "pandas>=2.0.0,<3.0.0",
    "plotly>=5.17.0,<6.0.0",
    "pillow>=10.0.0,<11.0.0",
    "httpx>=0.25.0,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "structlog>=23.2.0,<24.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    "pytest-mock>=3.12.0,<4.0.0",
    "pytest-xdist>=3.5.0,<4.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=20.1.0,<21.0.0",
    
    # Code Quality
    "black>=23.11.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<7.0.0",
    "mypy>=1.7.0,<2.0.0",
    "pre-commit>=3.6.0,<4.0.0",
    "bandit>=1.7.5,<2.0.0",
    "safety>=2.3.5,<3.0.0",
    "pip-audit>=2.6.1,<3.0.0",
    
    # Code Analysis
    "radon>=6.0.1,<7.0.0",
    "xenon>=0.9.0,<1.0.0",
    "vulture>=2.10,<3.0.0",
    "interrogate>=1.5.0,<2.0.0",
    
    # Performance
    "memory-profiler>=0.61.0,<1.0.0",
    "line-profiler>=4.1.1,<5.0.0",
    "py-spy>=0.3.14,<1.0.0",
    
    # Documentation
    "sphinx>=7.2.0,<8.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
    "sphinx-autodoc-typehints>=1.25.0,<2.0.0",
    "myst-parser>=2.0.0,<3.0.0",
    "linkchecker>=10.2.0,<11.0.0",
    
    # Release Management
    "twine>=4.0.2,<5.0.0",
    "bump2version>=1.0.1,<2.0.0",
    "git-changelog>=1.0.0,<2.0.0",
    
    # Development Tools
    "ipython>=8.17.0,<9.0.0",
    "jupyter>=1.0.0,<2.0.0",
    "notebook>=7.0.0,<8.0.0",
    "ipykernel>=6.26.0,<7.0.0",
]

[project.urls]
Homepage = "https://github.com/vishalm/ArchaeoVault"
Repository = "https://github.com/vishalm/ArchaeoVault"
Issues = "https://github.com/vishalm/ArchaeoVault/issues"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "ai_agents: AI agent tests",
    "performance: Performance tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
full_report = true

[tool.radon]
exclude = ["tests/*", "venv/*", ".venv/*"]

[tool.xenon]
exclude = ["tests/*", "venv/*", ".venv/*"]
max_absolute = "B"
max_average = "A"

[tool.interrogate]
ignore-init-module = true
ignore-init-method = true
ignore-magic = true
ignore-semiprivate = true
ignore-private = true
ignore-property-decorators = true
ignore-module = ["tests.*", "venv.*", ".venv.*"]
ignore-nested-functions = true
ignore-nested-classes = true
ignore-setters = true
ignore-super-delegation = true
ignore-regex = ["^test_.*", "^_.*"]
